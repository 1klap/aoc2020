#!/usr/bin/env ruby

def conforms_to_xmas_protocal(current_value, previous_values)
    for i in (0...previous_values.size)
        for j in (0...previous_values.size)
            next unless i != j
            val1 = previous_values[i]
            val2 = previous_values[j]
            if val1 + val2 == current_value
                return true
            end
        end
    end
    return false
end

def find_sum_terms(current_value, previous_values)
    puts "sum_terms: #{previous_values}"
    for index in (0...previous_values.size)
        for size in (1..(previous_values.size-index))
            #puts previous_values[index...index+size]
            #puts "***"
            if previous_values[index...index+size].sum == current_value
                return previous_values[index...index+size]
            end
        end
        #puts "---"
    end
    return nil
end

input = File.read "in/data.txt"
numbers = input.strip.split("\n").map( &:to_i)

rolling_window_length = 25

for index in (rolling_window_length...numbers.count)
    previous_values = numbers[index-rolling_window_length...index]
    current_value = numbers[index]
    #puts previous_values
    #puts "-- index: #{index}"
    if !conforms_to_xmas_protocal current_value, previous_values
        s = find_sum_terms current_value, numbers[...index]
        if !s.nil?
            puts "Conforming values: #{s}"
            s = s.sort
            s_min = s[0]
            s_max = s[-1]
            puts "Solution: #{s_min+s_max} s_min: #{s_min} s_max: #{s_max}"
            break
        else
            puts "No Solution for value: #{current_value}"
        end
        
    end
end